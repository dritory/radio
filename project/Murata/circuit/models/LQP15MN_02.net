;;****************************************************************************
;; File:        LQP15MN_02.net
;; Description: LQP15MN_02 model file
;; Author:      Agilent Technologies Japan, Ltd.
;; Created:     2019.06.11 17:48:22
;; Language:    ADSsim
;; (C) Copyright 2005, Agilent Technologies Japan, all rights reserved.
;;****************************************************************************

define LQP15MN_02 ( _net1  _net2 )
parameters PartNumber=0

#uselib "ckt" , "DAC"

DAC:DAC1  File="$muRataLibWeb_CIRCUIT_MODEL_DIR/LQP15MN_02.dat" Type="dscr" InterpMode="index_lookup" InterpDom="ri" ExtrapMode="interpMode" iVar1="INDEX" iVal1=PartNumber

K01=file{DAC1, "K01"}
L01=file{DAC1, "L01"}
M01=file{DAC1, "M01"}
K02=file{DAC1, "K02"}
L02=file{DAC1, "L02"}
M02=file{DAC1, "M02"}
K03=file{DAC1, "K03"}
L03=file{DAC1, "L03"}
M03=file{DAC1, "M03"}
K04=file{DAC1, "K04"}
L04=file{DAC1, "L04"}
M04=file{DAC1, "M04"}
K05=file{DAC1, "K05"}
L05=file{DAC1, "L05"}
M05=file{DAC1, "M05"}
K06=file{DAC1, "K06"}
L06=file{DAC1, "L06"}
M06=file{DAC1, "M06"}
K07=file{DAC1, "K07"}
L07=file{DAC1, "L07"}
M07=file{DAC1, "M07"}
K08=file{DAC1, "K08"}
L08=file{DAC1, "L08"}
M08=file{DAC1, "M08"}
K09=file{DAC1, "K09"}
L09=file{DAC1, "L09"}
M09=file{DAC1, "M09"}
K10=file{DAC1, "K10"}
L10=file{DAC1, "L10"}
M10=file{DAC1, "M10"}
K11=file{DAC1, "K11"}
L11=file{DAC1, "L11"}
M11=file{DAC1, "M11"}
K12=file{DAC1, "K12"}
L12=file{DAC1, "L12"}
M12=file{DAC1, "M12"}
K13=file{DAC1, "K13"}
L13=file{DAC1, "L13"}
M13=file{DAC1, "M13"}
K14=file{DAC1, "K14"}
L14=file{DAC1, "L14"}
M14=file{DAC1, "M14"}
K15=file{DAC1, "K15"}
L15=file{DAC1, "L15"}
M15=file{DAC1, "M15"}
K16=file{DAC1, "K16"}
L16=file{DAC1, "L16"}
M16=file{DAC1, "M16"}

jw=j*omega
HUGE_OPEN_R=1E10
HUGE_OPEN_L=1E10
TINY_OPEN_C=1E-30
TINY_SHORT_R=1E-10
TINY_SHORT_L=1E-30
HUGE_SHORT_C=1E10

Inv_jwC04=if (freq==0 or K04==0 or K04>=HUGE_SHORT_C) then 0 else 1/(jw*K04) endif
Inv_jwC05=if (freq==0 or K05==0 or K05>=HUGE_SHORT_C) then 0 else 1/(jw*K05) endif
Inv_jwC06=if (freq==0 or K06==0 or K06>=HUGE_SHORT_C) then 0 else 1/(jw*K06) endif
Inv_jwC07=if (freq==0 or K07==0 or K07>=HUGE_SHORT_C) then 0 else 1/(jw*K07) endif
Inv_jwC08=if (freq==0 or K08==0 or K08>=HUGE_SHORT_C) then 0 else 1/(jw*K08) endif
Inv_jwC09=if (freq==0 or K09==0 or K09>=HUGE_SHORT_C) then 0 else 1/(jw*K09) endif
Inv_jwC10=if (freq==0 or K10==0 or K10>=HUGE_SHORT_C) then 0 else 1/(jw*K10) endif
Inv_jwC11=if (freq==0 or K11==0 or K11>=HUGE_SHORT_C) then 0 else 1/(jw*K11) endif
Inv_jwC12=if (freq==0 or K12==0 or K12>=HUGE_SHORT_C) then 0 else 1/(jw*K12) endif
Inv_jwC13=if (freq==0 or K13==0 or K13>=HUGE_SHORT_C) then 0 else 1/(jw*K13) endif
Inv_jwC14=if (freq==0 or K14==0 or K14>=HUGE_SHORT_C) then 0 else 1/(jw*K14) endif
Inv_jwC15=if (freq==0 or K15==0 or K15>=HUGE_SHORT_C) then 0 else 1/(jw*K15) endif
Inv_jwC16=if (freq==0 or K16==0 or K16>=HUGE_SHORT_C) then 0 else 1/(jw*K16) endif

jwL04=if (L04<=TINY_SHORT_L) then 0 else jw*L04 endif
jwL05=if (L05<=TINY_SHORT_L) then 0 else jw*L05 endif
jwL06=if (L06<=TINY_SHORT_L) then 0 else jw*L06 endif
jwL07=if (L07<=TINY_SHORT_L) then 0 else jw*L07 endif
jwL08=if (L08<=TINY_SHORT_L) then 0 else jw*L08 endif
jwL09=if (L09<=TINY_SHORT_L) then 0 else jw*L09 endif
jwL10=if (L10<=TINY_SHORT_L) then 0 else jw*L10 endif
jwL11=if (L11<=TINY_SHORT_L) then 0 else jw*L11 endif
jwL12=if (L12<=TINY_SHORT_L) then 0 else jw*L12 endif
jwL13=if (L13<=TINY_SHORT_L) then 0 else jw*L13 endif
jwL14=if (L14<=TINY_SHORT_L) then 0 else jw*L14 endif
jwL15=if (L15<=TINY_SHORT_L) then 0 else jw*L15 endif
jwL16=if (L16<=TINY_SHORT_L) then 0 else jw*L16 endif

R04=if (M04<=TINY_SHORT_R) then 0 else M04 endif
R05=if (M05<=TINY_SHORT_R) then 0 else M05 endif
R06=if (M06<=TINY_SHORT_R) then 0 else M06 endif
R07=if (M07<=TINY_SHORT_R) then 0 else M07 endif
R08=if (M08<=TINY_SHORT_R) then 0 else M08 endif
R09=if (M09<=TINY_SHORT_R) then 0 else M09 endif
R10=if (M10<=TINY_SHORT_R) then 0 else M10 endif
R11=if (M11<=TINY_SHORT_R) then 0 else M11 endif
R12=if (M12<=TINY_SHORT_R) then 0 else M12 endif
R13=if (M13<=TINY_SHORT_R) then 0 else M13 endif
R14=if (M14<=TINY_SHORT_R) then 0 else M14 endif
R15=if (M15<=TINY_SHORT_R) then 0 else M15 endif
R16=if (M16<=TINY_SHORT_R) then 0 else M16 endif

Z04=if (K04==0 and L04==0 and M04==0) or (K04<=TINY_OPEN_C and L04>=HUGE_OPEN_L and M04>=HUGE_OPEN_R) then 0 else Inv_jwC04+jwL04+R04 endif
Z05=if (K05==0 and L05==0 and M05==0) or (K05<=TINY_OPEN_C and L05>=HUGE_OPEN_L and M05>=HUGE_OPEN_R) then 0 else Inv_jwC05+jwL05+R05 endif
Z06=if (K06==0 and L06==0 and M06==0) or (K06<=TINY_OPEN_C and L06>=HUGE_OPEN_L and M06>=HUGE_OPEN_R) then 0 else Inv_jwC06+jwL06+R06 endif
Z07=if (K07==0 and L07==0 and M07==0) or (K07<=TINY_OPEN_C and L07>=HUGE_OPEN_L and M07>=HUGE_OPEN_R) then 0 else Inv_jwC07+jwL07+R07 endif
Z08=if (K08==0 and L08==0 and M08==0) or (K08<=TINY_OPEN_C and L08>=HUGE_OPEN_L and M08>=HUGE_OPEN_R) then 0 else Inv_jwC08+jwL08+R08 endif
Z09=if (K09==0 and L09==0 and M09==0) or (K09<=TINY_OPEN_C and L09>=HUGE_OPEN_L and M09>=HUGE_OPEN_R) then 0 else Inv_jwC09+jwL09+R09 endif
Z10=if (K10==0 and L10==0 and M10==0) or (K10<=TINY_OPEN_C and L10>=HUGE_OPEN_L and M10>=HUGE_OPEN_R) then 0 else Inv_jwC10+jwL10+R10 endif
Z11=if (K11==0 and L11==0 and M11==0) or (K11<=TINY_OPEN_C and L11>=HUGE_OPEN_L and M11>=HUGE_OPEN_R) then 0 else Inv_jwC11+jwL11+R11 endif
Z12=if (K12==0 and L12==0 and M12==0) or (K12<=TINY_OPEN_C and L12>=HUGE_OPEN_L and M12>=HUGE_OPEN_R) then 0 else Inv_jwC12+jwL12+R12 endif
Z13=if (K13==0 and L13==0 and M13==0) or (K13<=TINY_OPEN_C and L13>=HUGE_OPEN_L and M13>=HUGE_OPEN_R) then 0 else Inv_jwC13+jwL13+R13 endif
Z14=if (K14==0 and L14==0 and M14==0) or (K14<=TINY_OPEN_C and L14>=HUGE_OPEN_L and M14>=HUGE_OPEN_R) then 0 else Inv_jwC14+jwL14+R14 endif
Z15=if (K15==0 and L15==0 and M15==0) or (K15<=TINY_OPEN_C and L15>=HUGE_OPEN_L and M15>=HUGE_OPEN_R) then 0 else Inv_jwC15+jwL15+R15 endif
Z16=if (K16==0 and L16==0 and M16==0) or (K16<=TINY_OPEN_C and L16>=HUGE_OPEN_L and M16>=HUGE_OPEN_R) then 0 else Inv_jwC16+jwL16+R16 endif

Y01=if (K01<=1E-30) then 0 else jw*K01 endif
Y02=if (L02==0 and M02==0) or (L02>=1E10) then 0 else 1/(jw*L02+M02) endif
Y03=if (M03==0) or (M03>=1E10) then 0 else 1/(M03) endif

Y04=if (Z04==0) then 0 else 1/Z04 endif
Y05=if (Z05==0) then 0 else 1/Z05 endif
Y06=if (Z06==0) then 0 else 1/Z06 endif
Y07=if (Z07==0) then 0 else 1/Z07 endif
Y08=if (Z08==0) then 0 else 1/Z08 endif
Y09=if (Z09==0) then 0 else 1/Z09 endif
Y10=if (Z10==0) then 0 else 1/Z10 endif
Y11=if (Z11==0) then 0 else 1/Z11 endif
Y12=if (Z12==0) then 0 else 1/Z12 endif
Y13=if (Z13==0) then 0 else 1/Z13 endif
Y14=if (Z14==0) then 0 else 1/Z14 endif
Y15=if (Z15==0) then 0 else 1/Z15 endif
Y16=if (Z16==0) then 0 else 1/Z16 endif

Y_Port:Y1P1 _net1 _net2 Y[1,1]=Y01+Y02+Y03+Y04+Y05+Y06+Y07+Y08+Y09+Y10+Y11+Y12+Y13+Y14+Y15+Y16

end LQP15MN_02

;;model information (PartNumber:partName)
;0 : LQP15MN1N0B02
;1 : LQP15MN1N0W02
;2 : LQP15MN1N1B02
;3 : LQP15MN1N1W02
;4 : LQP15MN1N2B02
;5 : LQP15MN1N2W02
;6 : LQP15MN1N3B02
;7 : LQP15MN1N3W02
;8 : LQP15MN1N4W02
;9 : LQP15MN1N5B02
;10 : LQP15MN1N5W02
;11 : LQP15MN1N6B02
;12 : LQP15MN1N6W02
;13 : LQP15MN1N7W02
;14 : LQP15MN1N8B02
;15 : LQP15MN1N8W02
;16 : LQP15MN1N9W02
;17 : LQP15MN2N0B02
;18 : LQP15MN2N0W02
;19 : LQP15MN2N1W02
;20 : LQP15MN2N2B02
;21 : LQP15MN2N2W02
;22 : LQP15MN2N3W02
;23 : LQP15MN2N4B02
;24 : LQP15MN2N4W02
;25 : LQP15MN2N5W02
;26 : LQP15MN2N6W02
;27 : LQP15MN2N7B02
;28 : LQP15MN2N7W02
;29 : LQP15MN2N8W02
;30 : LQP15MN2N9W02
;31 : LQP15MN3N0B02
;32 : LQP15MN3N0W02
;33 : LQP15MN3N1W02
;34 : LQP15MN3N2W02
;35 : LQP15MN3N3B02
;36 : LQP15MN3N3W02
;37 : LQP15MN3N4W02
;38 : LQP15MN3N5W02
;39 : LQP15MN3N6B02
;40 : LQP15MN3N6W02
;41 : LQP15MN3N7W02
;42 : LQP15MN3N8W02
;43 : LQP15MN3N9B02
;44 : LQP15MN3N9W02
;45 : LQP15MN4N3B02
;46 : LQP15MN4N7B02
;47 : LQP15MN5N1B02
;48 : LQP15MN5N6B02
;49 : LQP15MN6N2B02
;50 : LQP15MN6N8B02
;51 : LQP15MN7N5B02
;52 : LQP15MN8N2B02
;53 : LQP15MN9N1B02
;54 : LQP15MN10NG02
;55 : LQP15MN12NG02
;56 : LQP15MN15NG02
;57 : LQP15MN18NG02
;58 : LQP15MN22NG02
;59 : LQP15MN27NG02
;60 : LQP15MN33NG02

